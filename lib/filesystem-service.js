import fs from 'fs';
import jsonfile from 'jsonfile';

/**
 * Reads json file generated by license-report (with option "--output=json")
 * and generates javascript object array from it
 * @param {string} filePath - full path to the license-report generated json file
 * @returns {*} content of the license-report generated json file as object array
 */
export async function readJson(filePath) {
  if (!filePath) {
    throw new Error('license-downloader must be called with a "--source <license-report-json-file>" parameter');
  }

  if (!fs.existsSync(filePath)) {
    throw new Error(`Source file '${filePath}' does not exist`);
  }

  const json = await jsonfile.readFile(filePath);
  return json;
}

/**
 * Writes javascript object array as json string to file overwriting existing file
 * @param {object} json - object array to be written as json file
 * @param {string} filePath - full path to the output file to be generated
 */
export async function writeJson(json, filePath) {
  if (!filePath) {
    throw new Error('No target filename defined');
  }

  await jsonfile.writeFile(filePath, json);
}

export default {
  readJson,
  writeJson
};
